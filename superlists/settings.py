"""
Django settings for superlists project.

Generated by 'django-admin startproject' using Django 1.11.26.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '98ylk21^&*dbf6s9h5e1bd7!a*ipvh&2=(16$(h@x%-4cjcq$#'

# SECURITY WARNING: don't run with debug turned on in production!
# 注意： 当你用开发这服务器调试时，DEBUG 不是 True 时，django直接限制访问静态文件，这是"django的特性"
# 当我们在开发django应用时如果设置了 DEBUG = True，那么django便会自动帮我们对静态文件进行路由；但是当我们设置DEBUG = False后，这一功能便没有了
# 警告：线上环境严禁开启，调试模式【DEBUG=True】
DEBUG = True

# TEMPLATE_DEBUG = DEBUG
# 当DEBUG = False 时，需要设置此项,如：['127.0.0.1','www.baidu.com','*']
# '*'代表所有电脑都可以访问
# ALLOWED_HOSTS = ['superlists-test.ddns.net', '144.202.115.194', ]

ALLOWED_HOSTS = ['superlists-test.ddns.net', '144.202.115.194', '127.0.0.1', 'localhost']

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'lists',
    'accounts',
    'functional_tests',
]

AUTH_USER_MODEL = 'accounts.User'
AUTHENTICATION_BACKENDS = ['accounts.authentication.PasswordlessAuthenticationBackend', ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'superlists.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'superlists.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, '../database/db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
# collectstatic DIR
STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, '../static'))

# 解决debug=False时，静态文件无法获取到，便于本地调试
# 如果设置了，就分不清，服务器访问的是哪个文件夹下的静态文件了
# 出现的问题根本原因是：当我们在开发django应用时如果设置了 DEBUG = True，那么django便会自动帮我们对静态文件进行路由；
# 但是当我们设置DEBUG = False后，这一功能便没有了，此时静态文件就会出现加载失败的情况，想要让静态文件正常显示，
# 我们就需要配置静态文件服务了，指定目录，或者 nginx 配置静态文件目录。https://www.cnblogs.com/ievjai/p/9926187.html

# STATICFILES_DIRS告诉django,首先到STATICFILES_DIRS里面寻找静态文件，其次再到各个app的static文件夹里面找
# 注意：django查找静态文件是惰性查找,查找到第一个,就停止查找了

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, '/static/'),  ##修改地方
# ]
# SMTP SET 163.com
# EMAIL_HOST = 'smtp.163.com'
# EMAIL_HOST_USER = '17620360905@163.com'
# EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD')
# EMAIL_PORT = 25  # 当我设置成 465时，False , 发送邮件失败！
# EMAIL_USE_TLS = True

# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# 服务器名称: smtp.office365.com
# 端口: 587
# 加密方法: STARTTLS

# SMTP SET outlook.com
EMAIL_HOST = 'smtp.office365.com'
EMAIL_HOST_USER = 'testsuperlists@outlook.com'
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD')
EMAIL_PORT = 587  # SMTP 加密方法 STARTTLS
EMAIL_USE_TLS = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
        },
    },
    'root': {'level': 'INFO'},
}
